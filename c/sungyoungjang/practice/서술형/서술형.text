4. float과 double 자료형의 저장 방식에 대해서 서술하시오.

​float의 저장방식은 단정밀도 부동소수점이고
double의 저장방식은 배정밀도 부동소수점이다.
둘의 차이는 유효자릿수가 다르것에 있으며,
유효자릿수란 실수를 일정 자릿수 만큼만 표현할 수 있다는 뜻이다.
단정밀도와 배정밀도 부동소수점은 저장 할 수 있는 크기가 다르므로\
유효자릿수의 차이가 있습니다. 따라서 64비트를 가진 double이
좀 더 긴 자릿수의 소수점을 정밀하게 표현할 수 있습니다.


5. shortcut 동작 방식에 대해서 서술해보시오(&&와 ||에 대해서 각각)

​&& : 두항이 모두 참일 때 결과값이 참이 나온다, 그렇지 않다면 거짓
ex)
(5>3)%%(6>3) : true, (5>3)%%(1>3) : false

|| :  두 항중 하나의 항만 참이여도 결과값이 참이다, 두 항이 모두 거짓이어야 거짓

(5>3)||(1>3) : true, (2>3)||(1>3) : false

6. x & ~(2의 y승 - 1)의 의미에 대해 서술하시오.

​??

7. 함수 정의를 main 함수 아래에 적었을 경우, Compile Error가 나는 이유에 대해 기술하시오.

​C언어 컴파일러는 위에서 부터 아래로 소스코드로 해석하는데 main 함수 부분에서 정의한 함수에 대한
정보가 없기 때문입니다. 

8. 변수의 정확한 정의에 대해 기술하시오.

​변수는 프로그래밍에서 데이터를 저장하고 참조하기 위한 메모리이다.!
변수는 데이터를 담는 메모리 위치에 붙는 이름으로, 이 이름을 통해 해당 메모리 위치에 저장된 값에 접근할 수 있다.
변수의 특징으로는

이름: 변수는 이름을 가지고 있으며, 이름을 사용하여 프로그램에서 변수에 접근하고 값을 변경 가능

데이터 타입: 변수는 특정한 데이터 타입을 가지고 있으며, 데이터 타입은 변수가 어떤 종류의 데이터를 저장하는지 정의하며,
정수,부동소수점,문자등 다양한 형태가 있다

메모리 주소와 값 : 변수는 메모리 상의 특정 위치에 할당되어 있으며, 해당 위치에 저장된 값은 변수가 갖는 값입니다. 변수를 사용하면
프로그램은 이 메모리 위치를 통해 데이터에 접근 가능.

수정 가능 : 변수는 일반적으로 값을 변경 할 수 있는데, 이는 변수가 메모리 저장된 값을 갱신할 수 있다는 것을 의미.

9. Overflow와 Underflow는 어떤 경우에 나는지 기술하시오.

​Overflow는 변수나 데이터 타입이 가질수 있는 최대값보다 큰 값을 저장하려고 할 때 발생
ex) 10이 최대 일때 7..8..9..10..1(overflow)

Underflow는 Overflow의 반대로 데이터 타입이 가질 수 있는 최소 값보다 작은 값을 저장하려고 할 때 발생.
ex) 1이 최소 일때 3..2..1..10(underflow)
10. and, or, xor, not 동작 방식에 대해 기술하고

​and : 연산자는 모든 조건이 참일 때만 전체 표현식이 참이된다.

or : 최소한 하나의 조건이 참이면 전체 표현식이 참이 된다

xor : 두개의 조건중 하나만 참일때 전체 표현식이 참이된다.하지만 두개의 조건중 두개가 참이거나 거짓일때는 거짓이된다.

not : 주어진 조건을 반전시키며, 참이 나오면 거짓을, 거짓이 나오면 참으로 나온다. 부호만 바꾸고 -1

11. 10진수 33에 ~연산을 취해서 그 결과값을 알아보자!

     (편법을 쓰지말고 2의 보수등을 취해서 구체적으로 서술하기!)

 

12. Memory 구조(Stack, Heap, Data, Text)에 대해서 기술하시오.

메모리의 구조는 크게 4가지로 나뉘어 있으며

1.Text : Code영역이라고도 불리며 실행할 프로그램의 코드가 저장되는 영역으로 텍스트 영역이라고도 불린다.
CPU는 Test에 저장된 명령어를 하나씩 가져가서 처리한다.

2.Data : 메모리의 데이터data 영역은 프로그램의 전역 변수와 정적변수(static)가 저장되는 영역이다.
데이터 영역은 프로그램의 시작과 함께 할당되며, 프로그램이 종료되면 소멸.

3.Stack : 메모리의 스택(stack)영역은 함수의 호출과 관계되는 지역 변수와 매개변수가 저장되는 영역이다.
스택 영역은 함수의 호출과 함께 할당되며, 함수의 호출이 완료되면 소멸.
스택은 푸시(push)동작으로 데이터를 저장하고, 팝(pop)동작으로 데이터를 인출한다.
이러한 스택은 후입선출방식에 따라 동작하므로, 가장 늦게 저장된 데이터가 가장 먼저 인출된다.
스택 영역은 메모리의 높은 주소에서 낮은 주소의 방향으로 할당된다.

4.Heap : 메모리의 힙(Heap)영역은 사용자가 직접 관리 할 수 있는 '그리고 해야만 하는' 메모리 영역이다
힙 영역은 사용자에 의해 메모리 공간이 동적으로 할당되고 해제되며, 객체의 참조값이 
이 힙 영역에 저장되는 대표적인 데이터이다.
힙 영역은 메모리의 낮은 주소에서 높은 주소의 방향으로 할당된다.